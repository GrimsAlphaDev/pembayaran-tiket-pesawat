package Form;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Logger;
import java.util.logging.Level;
import Session.session;
import config.koneksi;
import java.sql.Connection;
import java.time.LocalDateTime;
import java.util.concurrent.ThreadLocalRandom;
import java.util.stream.Collectors;
import java.sql.Timestamp;
import java.sql.Statement;

public class UserDashboardForm extends javax.swing.JFrame {

    private Connection conn;

    public UserDashboardForm() {
        initComponents();
        conn = koneksi.getConnection();
        getData();
        nonAktifButton();
    }

    private void getData() {
        DefaultTableModel model = (DefaultTableModel) tbl_data.getModel();
        model.setRowCount(0);
        String name = session.getName();
        user.setText(name);
        try {
            String sql = "SELECT * FROM flights";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            int no = 1;
            while (rs.next()) {
                String flightNumber = rs.getString("flight_number");
                String departure = rs.getString("departure");
                String destination = rs.getString("destination");
                String departure_time = rs.getString("departure_time");
                String arrival_time = rs.getString("arrival_time");
                int price = rs.getInt("price");

                Object[] row = {no, flightNumber, departure, destination, departure_time, arrival_time, price};
                model.addRow(row);
                no++;
            }
            ps.close();
            rs.close();

        } catch (SQLException e) {
            Logger.getLogger(UserDashboardForm.class.getName()).log(Level.SEVERE, "Terjadi Kesalahan Pada Database", e);
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memuat pesanan", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        user = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_data = new javax.swing.JTable();
        search = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        n_penerbangan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        keberangkatan = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        destinasi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        waktu_keberangkatan = new javax.swing.JTextField();
        waktu_kedatangan = new javax.swing.JTextField();
        harga_tiket = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jml_bayar = new javax.swing.JTextField();
        metode = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        btn_submit = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        user1 = new javax.swing.JLabel();
        btn_clear = new javax.swing.JButton();
        my_ticket = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        user.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        user.setText("User");

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        tbl_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Nomor Penerbangan", "Keberangkatan", "Destinasi", "Waktu Keberangkatan", "Waktu Kedatangan", "Harga Tiket"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_data.setGridColor(new java.awt.Color(204, 204, 204));
        tbl_data.setRowHeight(40);
        tbl_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_dataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_data);

        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchKeyTyped(evt);
            }
        });

        jLabel8.setText("Search");

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setText("JADWAL PENERBANGAN");

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel2.setText("BELI TIKET");

        jLabel3.setText("Nomor Penerbangan");

        n_penerbangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n_penerbanganActionPerformed(evt);
            }
        });

        jLabel4.setText("Keberangkatan");

        keberangkatan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keberangkatanActionPerformed(evt);
            }
        });

        jLabel5.setText("Destinasi");

        destinasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destinasiActionPerformed(evt);
            }
        });

        jLabel6.setText("Waktu Keberangkatan");

        waktu_keberangkatan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waktu_keberangkatanActionPerformed(evt);
            }
        });

        waktu_kedatangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waktu_kedatanganActionPerformed(evt);
            }
        });

        harga_tiket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                harga_tiketActionPerformed(evt);
            }
        });

        jLabel10.setText("Jumlah Bayar");

        jml_bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jml_bayarActionPerformed(evt);
            }
        });

        metode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Debit", "Credit", "Cash" }));

        jLabel11.setText("Pilih Metode Pembayaran");

        btn_submit.setText("SUBMIT");
        btn_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_submitActionPerformed(evt);
            }
        });

        jLabel12.setText("Harga Tiket");

        jLabel13.setText("Waktu Kedatangan");

        user1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        user1.setText("Hi,");

        btn_clear.setText("CLEAR");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        my_ticket.setText("TIKET SAYA");
        my_ticket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                my_ticketActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(90, 90, 90)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(300, 300, 300))
                            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(user1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(user))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(my_ticket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(n_penerbangan, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(keberangkatan))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(waktu_kedatangan, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(waktu_keberangkatan)
                                    .addComponent(destinasi)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel5))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(harga_tiket, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(metode, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(107, 107, 107))
                            .addComponent(jml_bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(461, 461, 461)
                                .addComponent(jLabel2))
                            .addComponent(jLabel3))
                        .addGap(0, 461, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user)
                    .addComponent(jLabel8)
                    .addComponent(user1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(my_ticket, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(n_penerbangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(keberangkatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(destinasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(harga_tiket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel11))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(metode)
                                            .addComponent(jml_bayar)
                                            .addComponent(btn_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(waktu_keberangkatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(waktu_kedatangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_submitActionPerformed
        // TODO add your handling code here:

        int selectedRow = tbl_data.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih Baris yang akan diperbarui");
            return;
        }

        String flighNumber = tbl_data.getValueAt(selectedRow, 1).toString();
        String harga = harga_tiket.getText();
        String byr = jml_bayar.getText();
        String payment_method = metode.getSelectedItem().toString();

        int hargaInt = Integer.parseInt(harga);
        int bayarInt = Integer.parseInt(byr);

        if (bayarInt < hargaInt) {
            JOptionPane.showMessageDialog(this, "Biaya Yang Dibayarkan Tidak Cukup !");
            return;
        }

        LocalDateTime now = LocalDateTime.now();
        Timestamp bookingTime = Timestamp.valueOf(now);
        int customerId = session.getuserId();
        int flightId;

        try {
            String sql = "SELECT id from flights WHERE flight_number = ?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, flighNumber);
            ResultSet rs = st.executeQuery();
            if (rs.next()) {
                flightId = rs.getInt("id");

                String ticketNumber = "TN" + ThreadLocalRandom.current().ints(0, 100)
                        .distinct()
                        .limit(5)
                        .mapToObj(Integer::toString)
                        .collect(Collectors.joining());

                String sql1 = "INSERT INTO tickets (user_id, flight_id, ticket_number, booking_time) VALUE (?,?,?,?)";
                PreparedStatement st1 = conn.prepareStatement(sql1, Statement.RETURN_GENERATED_KEYS);
                st1.setInt(1, customerId);
                st1.setInt(2, flightId);
                st1.setString(3, ticketNumber);
                st1.setTimestamp(4, bookingTime);

                int rowsInserted = st1.executeUpdate();

                if (rowsInserted > 0) {

                    ResultSet generatedKeys = st1.getGeneratedKeys();

                    if (generatedKeys.next()) {
                        int ticketId = generatedKeys.getInt(1);
                        String insertPaymentSql = "INSERT INTO payments (ticket_id, amount, payment_time, payment_method) VALUES (?, ?, ?, ?)";
                        PreparedStatement st2 = conn.prepareStatement(insertPaymentSql, PreparedStatement.RETURN_GENERATED_KEYS);
                        st2.setInt(1, ticketId); // Mendapatkan ID tiket yang baru saja disisipkan
                        st2.setInt(2, bayarInt);
                        st2.setTimestamp(3, Timestamp.valueOf(LocalDateTime.now()));
                        st2.setString(4, payment_method);

                        int paymentRowsInserted = st2.executeUpdate();

                        if (paymentRowsInserted > 0) {
                            // Berhasil menyisipkan pembayaran
                            System.out.println("Ticket and payment booked successfully.");
                            JOptionPane.showMessageDialog(null, "Pembelian Tiket dan Pembayaran Berhasil");
                        } else {
                            // Gagal menyisipkan pembayaran
                            System.out.println("Failed to book payment.");
                            JOptionPane.showMessageDialog(null, "Gagal Memesan Tiket");
                        }
                        st2.close();
                    } else {
                        JOptionPane.showMessageDialog(this, "Gagal Memesan Tiket");
                        return;
                    }

                } else {
                    System.out.println("Failed to book the ticket.");
                    JOptionPane.showMessageDialog(this, "Gagal Memesan Tiket");
                    return;
                }

                st1.close();
            } else {
                JOptionPane.showMessageDialog(this, "Jadwal Penerbangan Tidak Ditemukan");
                return;
            }
            st.close();
            rs.close();

        } catch (SQLException e) {
            Logger.getLogger(UserDashboardForm.class.getName()).log(Level.SEVERE, null, e);
        }

        reset();
        getData();
        nonAktifButton();
    }//GEN-LAST:event_btn_submitActionPerformed

    private void jml_bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jml_bayarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jml_bayarActionPerformed

    private void harga_tiketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_harga_tiketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_harga_tiketActionPerformed

    private void waktu_kedatanganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waktu_kedatanganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waktu_kedatanganActionPerformed

    private void waktu_keberangkatanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waktu_keberangkatanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waktu_keberangkatanActionPerformed

    private void destinasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destinasiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_destinasiActionPerformed

    private void keberangkatanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keberangkatanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keberangkatanActionPerformed

    private void n_penerbanganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n_penerbanganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_n_penerbanganActionPerformed

    private void searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyTyped
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbl_data.getModel();
        model.setRowCount(0);

        String cari = search.getText();

        try {
            String sql = "SELECT * FROM flights WHERE flight_number LIKE ? OR departure LIKE ? OR destination LIKE ? OR departure_time LIKE ? OR arrival_time LIKE ? OR price LIKE ? ";
            PreparedStatement ps = conn.prepareStatement(sql);
            String cariWildcard = "%" + cari + "%";
            for (int i = 1; i <= 6; i++) {
                ps.setString(i, cariWildcard);
            }
            ResultSet rs = ps.executeQuery();

            int no = 1;

            while (rs.next()) {
                String flightNumber = rs.getString("flight_number");
                String departure = rs.getString("departure");
                String destination = rs.getString("destination");
                String departure_time = rs.getString("departure_time");
                String arrival_time = rs.getString("arrival_time");
                int price = rs.getInt("price");

                Object[] row = {no, flightNumber, departure, destination, departure_time, arrival_time, price};
                model.addRow(row);
                no++;
            }
            ps.close();
            rs.close();

        } catch (SQLException e) {
            Logger.getLogger(UserDashboardForm.class.getName()).log(Level.SEVERE, "Koneksi ke database gagal", e);
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memuat Jadwal Penerbangan", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchKeyTyped

    private void tbl_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_dataMouseClicked
        // TODO add your handling code here:
        int selectedRow = tbl_data.getSelectedRow();
        if (selectedRow != -1) {
            String flightN = tbl_data.getValueAt(selectedRow, 1).toString();
            String departure = tbl_data.getValueAt(selectedRow, 2).toString();
            String destination = tbl_data.getValueAt(selectedRow, 3).toString();
            String departure_time = tbl_data.getValueAt(selectedRow, 4).toString();
            String arrival_time = tbl_data.getValueAt(selectedRow, 5).toString();
            String price = tbl_data.getValueAt(selectedRow, 6).toString();

            n_penerbangan.setText(flightN);
            keberangkatan.setText(departure);
            destinasi.setText(destination);
            waktu_keberangkatan.setText(departure_time);
            waktu_kedatangan.setText(arrival_time);
            harga_tiket.setText(price);

            jml_bayar.setEnabled(true);
            metode.setEnabled(true);
            btn_submit.setEnabled(true);
        }
    }//GEN-LAST:event_tbl_dataMouseClicked

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        session.logout();
        LoginForm login = new LoginForm();
        login.setVisible(true);
        dispose();
        JOptionPane.showMessageDialog(this, "Berhasil Logout");
    }//GEN-LAST:event_logoutActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        // TODO add your handling code here:
        nonAktifButton();
        getData();
        reset();

    }//GEN-LAST:event_btn_clearActionPerformed

    private void my_ticketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_my_ticketActionPerformed
        // TODO add your handling code here:
        new UserTickets().setVisible(true);
        dispose();
    }//GEN-LAST:event_my_ticketActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserDashboardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserDashboardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserDashboardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserDashboardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserDashboardForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_submit;
    private javax.swing.JTextField destinasi;
    private javax.swing.JTextField harga_tiket;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jml_bayar;
    private javax.swing.JTextField keberangkatan;
    private javax.swing.JButton logout;
    private javax.swing.JComboBox<String> metode;
    private javax.swing.JButton my_ticket;
    private javax.swing.JTextField n_penerbangan;
    private javax.swing.JTextField search;
    private javax.swing.JTable tbl_data;
    private javax.swing.JLabel user;
    private javax.swing.JLabel user1;
    private javax.swing.JTextField waktu_keberangkatan;
    private javax.swing.JTextField waktu_kedatangan;
    // End of variables declaration//GEN-END:variables

    private void nonAktifButton() {
        btn_submit.setEnabled(false);
        jml_bayar.setEnabled(false);
        keberangkatan.setEnabled(false);
        metode.setEnabled(false);
        n_penerbangan.setEnabled(false);
        waktu_keberangkatan.setEnabled(false);
        waktu_kedatangan.setEnabled(false);
        destinasi.setEnabled(false);
        harga_tiket.setEnabled(false);
    }

    private void reset() {
        search.setText("");
        jml_bayar.setText("");
        keberangkatan.setText("");
        n_penerbangan.setText("");
        waktu_keberangkatan.setText("");
        waktu_kedatangan.setText("");
        destinasi.setText("");
        harga_tiket.setText("");
    }

    private static int getGeneratedTicketId(PreparedStatement preparedStatement) throws SQLException {
        ResultSet generatedKeys = preparedStatement.getGeneratedKeys();
        if (generatedKeys.next()) {
            return generatedKeys.getInt(1);
        } else {
            throw new SQLException("Creating ticket failed, no ID obtained.");
        }
    }
}
